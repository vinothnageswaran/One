{
  "stats": {
    "suites": 1,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2020-03-12T06:02:05.416Z",
    "end": "2020-03-12T06:02:54.483Z",
    "duration": 49067,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6b8fcf44-cd1d-4321-bfc8-9852358228e4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
          "title": "Verify Sidebar on the Dashboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the sidebar is displayed",
              "fullTitle": "Verify Sidebar on the Dashboard Verify the sidebar is displayed",
              "timedOut": null,
              "duration": 43830,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a41b9975-c1b4-40e6-a503-771581a7fe88",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Product Quality Fe% P% Al2O3% SiO2% H2O%",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Product Quality Fe% P% Al2O3% SiO2% H2O%",
              "timedOut": null,
              "duration": 1024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5f2ed937-8931-4c18-8968-571ebaf526a9",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Sailtime",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Sailtime",
              "timedOut": null,
              "duration": 378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3f69b73f-0822-4452-8302-3665dd1ce09d",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify customer is customer1",
              "fullTitle": "Verify Sidebar on the Dashboard Verify customer is customer1",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a79e24d4-2710-46af-806a-d2800462a37d",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Arrivaltime",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Arrivaltime",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f1c11c84-4d80-4843-8760-4d31326d87e7",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Required time to dumper",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Required time to dumper",
              "timedOut": null,
              "duration": 1166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "14e4d193-d710-4484-9f03-b15325b65ed2",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Scheduled dump time",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Scheduled dump time",
              "timedOut": null,
              "duration": 1027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f0cbd98d-2a9b-4602-a317-77866e9941e1",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the product is MACF",
              "fullTitle": "Verify Sidebar on the Dashboard Verify the product is MACF",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7c0e5a0e-df86-4827-99b4-50ad45b7ad9a",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Vessel details are TBN CAPE | 111111 |",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Vessel details are TBN CAPE | 111111 |",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c63dcc40-b2d1-4270-838a-b37375fdebba",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify GLR current",
              "fullTitle": "Verify Sidebar on the Dashboard Verify GLR current",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dad1481e-3728-4687-9bbd-cad3e24a7b59",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify GLR Required",
              "fullTitle": "Verify Sidebar on the Dashboard Verify GLR Required",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ae7bf7c8-65af-40ff-8ea9-08a8a94212c8",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify GLR Allocated",
              "fullTitle": "Verify Sidebar on the Dashboard Verify GLR Allocated",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b9b277d3-10e0-47dc-8916-f7d71e9eaaa6",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Projected Quality is ON SPEC",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Projected Quality is ON SPEC",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0da4fecc-2a04-4c85-a82e-7061f578b7fe",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Remaining tonnes is 100k",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Remaining tonnes is 100k",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5ef7d20f-a93c-45e2-98a6-e88cb4cccd04",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Unallocated tonnes is 82.00kt/5 Rakes",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Unallocated tonnes is 82.00kt/5 Rakes",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dfdc719f-ef2b-4362-aeb6-89911821c97f",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify GLR product details - Loaded 0.00kt/100.00kt contracted 100kt(0)% and Projected quality is ONSPEC",
              "fullTitle": "Verify Sidebar on the Dashboard Verify GLR product details - Loaded 0.00kt/100.00kt contracted 100kt(0)% and Projected quality is ONSPEC",
              "timedOut": null,
              "duration": 135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5a6c1bc6-52ca-4aa4-93c3-176407d7bf44",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Allocations -Car dumper details",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Allocations -Car dumper details",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "34e184b6-a8f8-415f-b4e5-6b656292f440",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify  Portarrival time is correct",
              "fullTitle": "Verify Sidebar on the Dashboard Verify  Portarrival time is correct",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "48607813-7797-443e-a8d4-998d6ca944f2",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Allocated tone is 7026tph",
              "fullTitle": "Verify Sidebar on the Dashboard Verify Allocated tone is 7026tph",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4a067302-6756-4d65-80b5-6e3a6b1e2184",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify SailBuffer is N/A",
              "fullTitle": "Verify Sidebar on the Dashboard Verify SailBuffer is N/A",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2e1e4208-0412-44a1-8ab0-36b352bca33d",
              "parentUUID": "bfae00c2-098b-403b-911d-75dfa8b1d38a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a41b9975-c1b4-40e6-a503-771581a7fe88",
            "5f2ed937-8931-4c18-8968-571ebaf526a9",
            "3f69b73f-0822-4452-8302-3665dd1ce09d",
            "a79e24d4-2710-46af-806a-d2800462a37d",
            "f1c11c84-4d80-4843-8760-4d31326d87e7",
            "14e4d193-d710-4484-9f03-b15325b65ed2",
            "f0cbd98d-2a9b-4602-a317-77866e9941e1",
            "7c0e5a0e-df86-4827-99b4-50ad45b7ad9a",
            "c63dcc40-b2d1-4270-838a-b37375fdebba",
            "dad1481e-3728-4687-9bbd-cad3e24a7b59",
            "ae7bf7c8-65af-40ff-8ea9-08a8a94212c8",
            "b9b277d3-10e0-47dc-8916-f7d71e9eaaa6",
            "0da4fecc-2a04-4c85-a82e-7061f578b7fe",
            "5ef7d20f-a93c-45e2-98a6-e88cb4cccd04",
            "dfdc719f-ef2b-4362-aeb6-89911821c97f",
            "5a6c1bc6-52ca-4aa4-93c3-176407d7bf44",
            "34e184b6-a8f8-415f-b4e5-6b656292f440",
            "48607813-7797-443e-a8d4-998d6ca944f2",
            "4a067302-6756-4d65-80b5-6e3a6b1e2184",
            "2e1e4208-0412-44a1-8ab0-36b352bca33d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48712,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "4.0.1"
    }
  }
}